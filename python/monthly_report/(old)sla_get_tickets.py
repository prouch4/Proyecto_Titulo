#####################################
# DESCRIPCIÃ“N DEL SCRIPT            #
#####################################

# INSERTE DESCRIPCION

#####################################
# IMPORTS NECESARIOS                #
#####################################

import connection_db     as db
import get_fresh_service as fs

from datetime import datetime, timedelta
from json     import loads
import ast

#####################################
# SCRIPT                            #
#####################################

start_date = datetime(2024,4,15,0,0,0)
stop_date  = datetime(2024,4,21,23,59,59)
table      = "sla_monitoreo_test"

# IDs DE TICKETS USADOS

monitor_filter = [
    f"(created_at >= '{start_date}' AND created_at <= '{stop_date}')",
    "(item_category IN ('Auto Ofensa','Ofensa Manual','AutomatEvertec','Solicitud de gestion Manual'))",
    "(sla_cerrar = 1)",
]

default_filter  = [
    f"(created_at >= '{start_date}' AND created_at <= '{stop_date}')",
]

query_filter   = default_filter
query_completa = f"SELECT id FROM {table} WHERE {' AND '.join(query_filter)}"

monthly_conn = db.__try_open__(db.connection_params_2, True)
db_results   = db.__get_data__(monthly_conn, query_completa, multi = True)

ticket_list = []
for result in db_results:
    ticket_list.append(result['id'])

monthly_conn = db.__try_close__(monthly_conn)

# COMPARACION CON FS

# ofensas_fuera_sla   = [45114, 45116, 45212, 45263, 45271, 45469, 46149, 46586, 47041, 47722]
# ofensas_dentro_sla  = [44939, 44940, 44941, 44942, 44943, 44944, 44945, 44946, 44947, 44950, 44951, 44965, 44969, 44980, 44983, 44984, 44985, 44986, 44987, 44988, 44989, 44992, 44997, 44998, 44999, 45003, 45004, 45005, 45006, 45012, 45013, 45015, 45016, 45017, 45034, 45036, 45040, 45043, 45044, 45046, 45048, 45049, 45056, 45080, 45081, 45086, 45087, 45088, 45089, 45090, 45091, 45092, 45094, 45096, 45097, 45098, 45099, 45100, 45102, 45104, 45115, 45122, 45124, 45127, 45128, 45129, 45130, 45131, 45132, 45135, 45136, 45137, 45138, 45140, 45142, 45143, 45144, 45145, 45147, 45148, 45150, 45151, 45152, 45153, 45155, 45156, 45157, 45160, 45165, 45166, 45167, 45168, 45169, 45171, 45172, 45173, 45174, 45175, 45177, 45178, 45182, 45185, 45186, 45187, 45189, 45190, 45191, 45193, 45194, 45197, 45199, 45201, 45204, 45205, 45206, 45207, 45208, 45210, 45214, 45215, 45216, 45217, 45218, 45219, 45220, 45221, 45223, 45227, 45228, 45229, 45230, 45231, 45235, 45236, 45237, 45238, 45243, 45244, 45245, 45247, 45248, 45249, 45253, 45256, 45261, 45264, 45265, 45269, 45270, 45273, 45274, 45276, 45277, 45278, 45280, 45281, 45283, 45285, 45286, 45288, 45289, 45290, 45291, 45292, 45293, 45294, 45296, 45297, 45298, 45299, 45300, 45301, 45303, 45304, 45306, 45307, 45308, 45309, 45310, 45311, 45312, 45313, 45314, 45315, 45316, 45317, 45318, 45319, 45320, 45321, 45322, 45323, 45324, 45325, 45326, 45327, 45328, 45329, 45330, 45331, 45333, 45334, 45335, 45336, 45337, 45338, 45340, 45341, 45342, 45343, 45344, 45348, 45353, 45354, 45356, 45357, 45359, 45360, 45361, 45362, 45363, 45365, 45368, 45369, 45370, 45372, 45373, 45374, 45375, 45376, 45377, 45378, 45379, 45380, 45381, 45382, 45383, 45385, 45388, 45389, 45401, 45403, 45404, 45405, 45406, 45408, 45409, 45410, 45413, 45414, 45415, 45416, 45417, 45418, 45419, 45421, 45423, 45424, 45426, 45428, 45431, 45434, 45435, 45436, 45437, 45439, 45441, 45448, 45450, 45451, 45452, 45453, 45455, 45456, 45457, 45458, 45461, 45465, 45466, 45467, 45472, 45473, 45474, 45476, 45477, 45478, 45479, 45480, 45481, 45482, 45484, 45486, 45487, 45488, 45490, 45492, 45493, 45494, 45496, 45497, 45498, 45499, 45500, 45501, 45502, 45503, 45504, 45508, 45512, 45513, 45514, 45515, 45517, 45518, 45519, 45520, 45521, 45523, 45524, 45525, 45526, 45527, 45529, 45531, 45532, 45533, 45534, 45535, 45536, 45537, 45538, 45539, 45540, 45542, 45544, 45545, 45546, 45547, 45548, 45549, 45550, 45552, 45554, 45555, 45556, 45557, 45558, 45559, 45560, 45561, 45564, 45568, 45569, 45570, 45572, 45573, 45574, 45575, 45576, 45577, 45578, 45579, 45580, 45581, 45582, 45583, 45584, 45585, 45586, 45587, 45588, 45591, 45592, 45593, 45594, 45595, 45597, 45598, 45599, 45600, 45601, 45602, 45603, 45604, 45605, 45606, 45607, 45608, 45609, 45610, 45612, 45613, 45614, 45615, 45617, 45618, 45619, 45620, 45621, 45622, 45623, 45624, 45625, 45627, 45628, 45629, 45630, 45631, 45632, 45633, 45634, 45636, 45637, 45638, 45639, 45640, 45641, 45642, 45643, 45644, 45645, 45646, 45647, 45648, 45649, 45650, 45651, 45652, 45654, 45655, 45657, 45658, 45659, 45660, 45661, 45662, 45663, 45669, 45670, 45675, 45677, 45681, 45684, 45686, 45688, 45690, 45691, 45702, 45703, 45704, 45707, 45709, 45712, 45713, 45714, 45715, 45716, 45718, 45720, 45721, 45722, 45724, 45734, 45736, 45737, 45738, 45739, 45742, 45744, 45745, 45757, 45758, 45760, 45763, 45773, 45774, 45775, 45776, 45777, 45778, 45779, 45786, 45790, 45794, 45801, 45802, 45803, 45804, 45808, 45809, 45810, 45811, 45812, 45813, 45814, 45816, 45819, 45820, 45821, 45822, 45823, 45825, 45827, 45831, 45836, 45844, 45846, 45848, 45849, 45855, 45856, 45858, 45859, 45860, 45861, 45862, 45864, 45865, 45867, 45870, 45871, 45872, 45873, 45874, 45877, 45878, 45880, 45882, 45883, 45885, 45886, 45887, 45889, 45890, 45891, 45895, 45896, 45897, 45898, 45899, 45900, 45901, 45902, 45903, 45904, 45905, 45906, 45907, 45908, 45909, 45910, 45911, 45912, 45913, 45914, 45915, 45917, 45919, 45920, 45921, 45922, 45923, 45924, 45925, 45927, 45928, 45929, 45930, 45931, 45933, 45934, 45935, 45936, 45937, 45938, 45939, 45940, 45941, 45942, 45943, 45944, 45945, 45946, 45947, 45948, 45949, 45951, 45952, 45954, 45955, 45956, 45958, 45959, 45960, 45963, 45964, 45965, 45966, 45967, 45968, 45970, 45971, 45973, 45974, 45975, 45976, 45977, 45979, 45981, 45983, 45986, 45988, 45989, 45990, 45992, 45994, 45995, 46003, 46004, 46005, 46007, 46008, 46010, 46012, 46013, 46014, 46015, 46016, 46017, 46018, 46019, 46020, 46024, 46025, 46026, 46027, 46030, 46032, 46034, 46035, 46037, 46041, 46042, 46043, 46044, 46045, 46046, 46047, 46048, 46049, 46050, 46051, 46052, 46054, 46056, 46060, 46061, 46062, 46063, 46064, 46065, 46066, 46068, 46069, 46071, 46078, 46079, 46083, 46084, 46089, 46090, 46091, 46092, 46093, 46095, 46096, 46099, 46100, 46102, 46103, 46104, 46105, 46108, 46109, 46112, 46113, 46114, 46117, 46118, 46123, 46130, 46132, 46133, 46134, 46135, 46136, 46138, 46141, 46142, 46143, 46144, 46145, 46146, 46148, 46151, 46153, 46154, 46156, 46158, 46159, 46160, 46161, 46163, 46165, 46166, 46167, 46169, 46172, 46174, 46175, 46176, 46177, 46178, 46179, 46180, 46182, 46183, 46184, 46186, 46187, 46188, 46189, 46190, 46192, 46193, 46194, 46195, 46196, 46198, 46199, 46201, 46203, 46205, 46206, 46207, 46209, 46210, 46212, 46213, 46214, 46215, 46220, 46221, 46222, 46224, 46225, 46226, 46227, 46228, 46229, 46230, 46231, 46232, 46235, 46236, 46237, 46238, 46239, 46241, 46242, 46243, 46245, 46247, 46250, 46252, 46255, 46259, 46260, 46261, 46265, 46267, 46271, 46277, 46279, 46280, 46283, 46284, 46285, 46287, 46288, 46289, 46291, 46293, 46294, 46295, 46296, 46298, 46299, 46300, 46301, 46302, 46303, 46304, 46305, 46307, 46310, 46312, 46314, 46315, 46316, 46317, 46318, 46319, 46321, 46322, 46323, 46335, 46336, 46345, 46346, 46362, 46369, 46378, 46379, 46380, 46381, 46382, 46383, 46384, 46385, 46388, 46389, 46390, 46392, 46394, 46395, 46398, 46406, 46412, 46422, 46428, 46431, 46432, 46433, 46434, 46436, 46439, 46440, 46441, 46444, 46445, 46446, 46447, 46449, 46452, 46455, 46456, 46457, 46458, 46460, 46462, 46464, 46465, 46466, 46468, 46469, 46470, 46471, 46473, 46474, 46475, 46476, 46478, 46480, 46482, 46483, 46484, 46485, 46486, 46488, 46490, 46491, 46492, 46494, 46496, 46497, 46498, 46499, 46501, 46502, 46503, 46504, 46505, 46506, 46507, 46509, 46511, 46512, 46513, 46514, 46515, 46516, 46518, 46520, 46521, 46522, 46523, 46524, 46526, 46528, 46529, 46530, 46531, 46532, 46534, 46535, 46536, 46537, 46538, 46539, 46540, 46541, 46542, 46543, 46544, 46545, 46546, 46547, 46548, 46549, 46550, 46551, 46552, 46553, 46554, 46557, 46558, 46559, 46560, 46562, 46563, 46564, 46565, 46566, 46568, 46569, 46570, 46571, 46572, 46574, 46575, 46577, 46578, 46579, 46580, 46581, 46582, 46583, 46584, 46585, 46587, 46588, 46589, 46592, 46606, 46609, 46611, 46612, 46614, 46621, 46622, 46624, 46627, 46628, 46629, 46631, 46632, 46635, 46636, 46637, 46638, 46639, 46640, 46641, 46642, 46643, 46645, 46651, 46654, 46661, 46662, 46666, 46669, 46670, 46674, 46677, 46678, 46679, 46680, 46681, 46682, 46683, 46686, 46687, 46688, 46689, 46691, 46692, 46693, 46694, 46695, 46696, 46697, 46699, 46700, 46701, 46702, 46703, 46704, 46705, 46706, 46707, 46709, 46710, 46711, 46712, 46713, 46717, 46718, 46720, 46723, 46725, 46726, 46728, 46729, 46730, 46731, 46733, 46734, 46738, 46739, 46745, 46747, 46748, 46749, 46755, 46758, 46761, 46766, 46769, 46770, 46771, 46772, 46774, 46777, 46779, 46780, 46781, 46782, 46784, 46796, 46797, 46798, 46802, 46812, 46813, 46815, 46818, 46819, 46822, 46823, 46824, 46825, 46827, 46828, 46829, 46830, 46834, 46835, 46836, 46837, 46838, 46839, 46840, 46841, 46842, 46845, 46854, 46855, 46856, 46860, 46861, 46864, 46867, 46868, 46873, 46881, 46888, 46902, 46903, 46907, 46908, 46912, 46913, 46915, 46917, 46918, 46921, 46922, 46923, 46926, 46927, 46932, 46936, 46939, 46942, 46944, 46947, 46948, 46949, 46951, 46953, 46956, 46957, 46962, 46964, 46967, 46968, 46970, 46973, 46976, 46979, 46999, 47025, 47026, 47027, 47028, 47052, 47055, 47056, 47065, 47070, 47077, 47086, 47087, 47088, 47089, 47094, 47095, 47099, 47101, 47105, 47114, 47126, 47127, 47130, 47132, 47133, 47134, 47135, 47136, 47138, 47139, 47141, 47142, 47144, 47145, 47149, 47151, 47152, 47153, 47156, 47157, 47158, 47161, 47162, 47164, 47166, 47170, 47171, 47178, 47183, 47184, 47185, 47197, 47198, 47199, 47203, 47206, 47207, 47208, 47214, 47215, 47229, 47230, 47231, 47247, 47255, 47260, 47261, 47262, 47264, 47268, 47269, 47270, 47271, 47272, 47273, 47274, 47276, 47279, 47280, 47283, 47285, 47301, 47312, 47313, 47314, 47318, 47319, 47320, 47321, 47324, 47325, 47326, 47327, 47331, 47333, 47334, 47337, 47347, 47348, 47360, 47366, 47368, 47376, 47379, 47387, 47388, 47391, 47392, 47399, 47406, 47409, 47410, 47415, 47420, 47421, 47423, 47425, 47427, 47435, 47440, 47441, 47443, 47456, 47457, 47458, 47460, 47463, 47464, 47466, 47467, 47468, 47469, 47470, 47472, 47475, 47476, 47477, 47488, 47495, 47500, 47503, 47512, 47513, 47515, 47516, 47517, 47518, 47519, 47520, 47521, 47523, 47526, 47528, 47529, 47531, 47534, 47537, 47538, 47539, 47540, 47543, 47544, 47548, 47549, 47550, 47551, 47552, 47553, 47554, 47555, 47557, 47558, 47559, 47560, 47561, 47562, 47563, 47564, 47565, 47566, 47567, 47568, 47569, 47570, 47572, 47573, 47574, 47575, 47579, 47580, 47581, 47585, 47586, 47592, 47595, 47596, 47602, 47606, 47608, 47609, 47610, 47611, 47615, 47616, 47620, 47621, 47626, 47632, 47636, 47637, 47638, 47644, 47657, 47666, 47680, 47683, 47685, 47686, 47687, 47688, 47692, 47694, 47695, 47697, 47704, 47709, 47714, 47718, 47723, 47726, 47734, 47738, 47740, 47742, 47744, 47746, 47747, 47749, 47750, 47751, 47752, 47754, 47758, 47765, 47769, 47773, 47785, 47797, 47801, 47802, 47808, 47811, 47812, 47813, 47820, 47823, 47824, 47825, 47826, 47827, 47828, 47829, 47830, 47832, 47834, 47835, 47838, 47839, 47840, 47841, 47842, 47843, 47847, 47848, 47852, 47854, 47855, 47856, 47857, 47859, 47865, 47868, 47879, 47883, 47885, 47886, 47889, 47890, 47893, 47901, 47914, 47927, 47957, 47960, 47962, 47965, 47966, 47967, 47972, 47978, 47993, 48000, 48007, 48010, 48012, 48014]
print(ticket_list)
tickets_por_comparar = ticket_list

# temp_var = fs.fresh_service_get("ticket_specific_2", 47686)
# if temp_var != None:
#     temp_var['ticket'].pop("attachments")        # POR FUTURO INSERT
#     temp_var['ticket'].pop("description")        # REPETIDO DE DESCTRIPCION_TEXT
#     temp_var['ticket'].pop("description_text")   # PESA DEMASIADO

#     temp_var = fs.dictionary_field_corrector(temp_var)['ticket'][0]

tickets_results = []
for id in tickets_por_comparar:

    ticket_var = fs.fresh_service_get("ticket_specific_2", id)
    if ticket_var != None:

        ticket_var = fs.dictionary_field_corrector(ticket_var)['ticket'][0]
        ticket_var.pop("attachments")        # POR FUTURO INSERT
        ticket_var.pop("description")        # REPETIDO DE DESCTRIPCION_TEXT
        ticket_var.pop("description_text")   # PESA DEMASIADO


        print(ticket_var)
        tickets_results.append(ticket_var)
    else:
        pass


# LECTURA DE ARCHIVO
# ticket_file = open("/opt/python_process/python/monthly_report/ticket_ofensas.csv")

monthly_conn = db.__try_open__(db.connection_params_2, True)
# for line in ticket_file:
for line in tickets_results:

    # temp_var = line.rstrip('\n')
    # temp_var = temp_var.replace("'", "\"")
    # temp_var = ast.literal_eval(temp_var)
    temp_var = line

    query = f"SELECT * FROM {table} WHERE id = {temp_var['id']}"
    query = db.__get_data__(monthly_conn, query)

    if query != None:

        if query['updated_at'] == None or temp_var['updated_at'] == None:
            pass
        elif query['updated_at'] == datetime.strptime(temp_var['updated_at'], "%Y-%m-%d %H:%M:%S"):
            pass
        else:
            print(f"from DB:    {query}")
            print(f"from FS:    {temp_var}")
            print("\n")

    elif query == None:
        print("No encontrado")



monthly_conn = db.__try_close__(monthly_conn)
# ticket_file.close()